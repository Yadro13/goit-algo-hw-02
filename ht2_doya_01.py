import random
import time
import threading
import queue
from faker import Faker

fake = Faker()

# --- –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ---
TOTAL_SEATS = 198
SERVICE_TIME = 2  # seconds

# --- –ß–µ—Ä–≥–∏ ---
queue_platinum = queue.Queue()
queue_gold = queue.Queue()
queue_standard = queue.Queue()

# --- –ú—ñ—Å—Ü—è –≤ –ª—ñ—Ç–∞–∫—É ---
seat_rows = range(1, 34)  # 33 —Ä—è–¥–∏
seat_cols = ['A', 'B', 'C', 'D', 'E', 'F']
all_seats = [f"{row}{col}" for row in seat_rows for col in seat_cols]
seat_counter = 0

# --- –¢–∏–ø–∏ –∫–∞—Ä—Ç–æ–∫ —ñ —à–∞–Ω—Å–∏ ---
CARD_TYPES = {
    "Platinum": 0.1,
    "Gold": 0.2,
    "Standard": 0.7,
}

# --- –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∫–∞—Ä—Ç–æ–∫ ---
def get_random_card():
    r = random.random()
    if r < CARD_TYPES["Platinum"]:
        return "Platinum"
    elif r < CARD_TYPES["Platinum"] + CARD_TYPES["Gold"]:
        return "Gold"
    return "Standard"

# --- –ö–ª—ñ—î–Ω—Ç ---
class Client:
    def __init__(self, id):
        self.name = fake.first_name()
        self.id = id
        self.card = get_random_card()

# --- –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–ª—ñ—î–Ω—Ç—ñ–≤ ---
def generate_clients():
    client_id = 1
    while True:
        client = Client(client_id)
        if client.card == "Platinum":
            queue_platinum.put(client)
        elif client.card == "Gold":
            queue_gold.put(client)
        else:
            queue_standard.put(client)
        client_id += 1
        time.sleep(random.uniform(0.5, 1.5))  # –ü–æ—Ç—ñ–∫ –∫–ª—ñ—î–Ω—Ç—ñ–≤ –∑ —ñ–Ω—Ç–µ—Ä–≤–∞–ª–æ–º

# --- –û–±—Ä–æ–±–∫–∞ –∫–ª—ñ—î–Ω—Ç—ñ–≤ ---
def process_clients():
    global seat_counter
    while seat_counter < TOTAL_SEATS:
        if not queue_platinum.empty():
            client = queue_platinum.get()
        elif not queue_gold.empty():
            client = queue_gold.get()
        elif not queue_standard.empty():
            client = queue_standard.get()
        else:
            print("üïê –û—á—ñ–∫—É—î–º–æ –Ω–æ–≤–∏—Ö –ø–∞—Å–∞–∂–∏—Ä—ñ–≤...")
            time.sleep(1)
            continue

        seat = all_seats[seat_counter]
        seat_counter += 1

        print(f"\n‚úàÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –¢–µ—Ä–º–∏–Ω–∞–ª –ë, {client.name}!")
        print(f"üé´ –¢–∏–ø –≤–∞—à–µ–π –∫–∞—Ä—Ç—ã: {client.card.upper()}")
        print(f"ü™™ –í–∞—à–µ –º–µ—Å—Ç–æ: {seat}")
        print("‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–ø–∞—Å–∏–±–æ, —Ö–æ—Ä–æ—à–µ–≥–æ –ø–æ–ª—ë—Ç–∞!")

        time.sleep(SERVICE_TIME)

    print("\nüö´ –í—Å–µ –º–µ—Å—Ç–∞ –∑–∞–Ω—è—Ç—ã. –ü–æ—Å–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –í –Ω–∞—à–µ–º –ë–æ–∏–Ω–≥–µ 737 –∏—Ö –≤—Å–µ–≥–æ 198.")

# --- –ó–∞–ø—É—Å–∫ ---
if __name__ == "__main__":
    print("\nüõ´ –°—Ç–∞—Ä—Ç—É—î —Å–∏–º—É–ª—è—Ü—ñ—è –¢–µ—Ä–º—ñ–Ω–∞–ª—É –ë –º—ñ–∂–Ω–∞—Ä–æ–¥–Ω–∏—Ö –∞–≤—ñ–∞–ª—ñ–Ω—ñ–π –£–∫—Ä–∞—ó–Ω–∏...")

    thread_gen = threading.Thread(target=generate_clients, daemon=True)
    thread_gen.start()

    process_clients()